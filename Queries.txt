1) Fetch all the paintings which are not displayed on any museums?

SELECT name FROM work
WHERE museum_id IS NULL;



2) Are there museuems without any paintings?

SELECT museum_id FROM museum
WHERE museum_id NOT IN (
	SELECT DISTINCT museum_id 
	FROM work
	WHERE museum_id IS NOT NULL);



3) How many paintings have an asking price of more than their regular price?

SELECT COUNT(work_id) FROM product_size
WHERE sale_price > regular_price;



4) Identify the paintings whose asking price is less than 50% of its regular price

SELECT work_id FROM product_size
WHERE sale_price < regular_price*0.5;



5) Which canva size costs the most?

SELECT DISTINCT cs.label FROM canvas_size cs
INNER JOIN product_size ps ON cs.size_id::text = ps.size_id
WHERE cs.size_id::text IN (
	SELECT size_id FROM product_size
	ORDER BY sale_price DESC
	LIMIT 1)
	
----------OR----------
	
WITH max_price_canva AS (
	SELECT RANK() OVER (ORDER BY sale_price DESC) AS rank, size_id, sale_price
	FROM product_size
	LIMIT 1
)
SELECT cs.label, mpc.sale_price FROM canvas_size cs
INNER JOIN max_price_canva mpc ON cs.size_id::text = mpc.size_id
WHERE rank = 1;
	
	
	
6) Delete duplicate records from work, product_size, subject and image_link tables

DELETE FROM work
WHERE ctid NOT IN (SELECT MIN(ctid) FROM work
				  GROUP BY work_id);
				  
DELETE FROM product_size
WHERE ctid NOT IN (SELECT MIN(ctid) FROM product_size
				  GROUP BY work_id, size_id);
				  
DELETE FROM subject
WHERE ctid NOT IN (SELECT MIN(ctid) FROM subject
				  GROUP BY work_id);
				  
DELETE FROM image_link
WHERE ctid NOT IN (SELECT MIN(ctid) FROM image_link
				  GROUP BY work_id);
		
		
				  
7) Identify the museums with invalid city information in the given dataset

SELECT * FROM museum
WHERE city ~ '^[0-9]';



8) Museum_Hours table has 1 invalid entry. Identify it and remove it.

DELETE FROM museum_hours
WHERE ctid NOT IN (SELECT MIN(ctid) FROM museum_hours
				  GROUP BY museum_id, day);
	
	
				  
9) Fetch the top 10 most famous painting subject

SELECT subject, COUNT(subject) as count FROM subject
GROUP BY subject
ORDER BY count DESC
LIMIT 10;



10) Identify the museums which are open on both Sunday and Monday. Display museum name, city.

WITH museum_open AS (SELECT 
					 ROW_NUMBER() OVER (PARTITION BY museum_id ORDER BY museum_id) AS row,
					 museum_id
					 FROM museum_hours
					 WHERE day = 'Sunday' OR day = 'Monday'
)
SELECT m.name, m.city FROM museum m
INNER JOIN museum_open o ON m.museum_id = o.museum_id
WHERE o.row = 2;



11) How many museums are open every single day?

SELECT COUNT(1) FROM (SELECT museum_id, COUNT(museum_id) 
					  FROM museum_hours
					  GROUP BY museum_id
					  HAVING COUNT(museum_id) = 7) count;
	
	
					  
12) Which are the top 5 most popular museum? (Popularity is defined based on most no of paintings in a museum)

WITH count_paintings AS (SELECT museum_id, COUNT(work_id) AS paintings FROM work
						 WHERE museum_id IS NOT NULL
						 GROUP BY museum_id
						 ORDER BY paintings DESC
						 LIMIT 5
)
SELECT m.museum_id, m.name, m.city, m.country, c.paintings FROM museum m
INNER JOIN count_paintings c ON m.museum_id = c.museum_id;



13) Who are the top 5 most popular artist? (Popularity is defined based on most no of paintings done by an artist)

WITH count_paintings AS (SELECT artist_id, COUNT(work_id) AS paintings 
						FROM work
						GROUP BY artist_id
						ORDER BY paintings DESC
						LIMIT 5
)
SELECT a.full_name, a.nationality, c.paintings FROM artist a
INNER JOIN count_paintings c ON c.artist_id = a.artist_id;



14) Display the 3 least popular canva sizes

WITH canva_size_rank AS(SELECT c.size_id, c.label, COUNT(p.work_id) AS paintings,
						DENSE_RANK() OVER(ORDER BY COUNT(p.work_id)) as rank
						FROM canvas_size c
						INNER JOIN product_size p ON c.size_id::text = p.size_id
						GROUP BY c.size_id, c.label
)
SELECT c.label, s.paintings, s.rank FROM canvas_size c
INNER JOIN canva_size_rank s ON c.size_id = s.size_id
WHERE rank <= 3;



15) Which museum is open for the longest during a day. Dispay museum name, state and hours open and which day?

SELECT m.name, m.state, h.day, h.open, h.close,
to_timestamp(h.close, 'HH:MI PM') - to_timestamp(h.open, 'HH:MI AM') AS time_open,
RANK() OVER (ORDER BY to_timestamp(h.close, 'HH:MI PM') - to_timestamp(h.open, 'HH:MI AM') DESC)
FROM museum m
INNER JOIN museum_hours h ON m.museum_id = h.museum_id
LIMIT 1;



16) Which museum has the most no of most popular painting style?

WITH most_popular_style AS (SELECT style, COUNT(work_id) 
							FROM work
							GROUP BY style
							ORDER BY COUNT(work_id) DESC
							LIMIT 1
)
SELECT m.name, w.style, COUNT(w.style) AS paintings FROM work w
INNER JOIN museum m ON w.museum_id = m.museum_id
WHERE w.style IN (SELECT style FROM most_popular_style) AND w.museum_id IS NOT NULL
GROUP BY m.name, w.style
ORDER BY paintings DESC
LIMIT 1;



17) Identify the artists whose paintings are displayed in multiple countries

WITH artist_painting_country AS (SELECT DISTINCT a.full_name AS name, m.country
								FROM work w
								INNER JOIN artist a ON a.artist_id = w.artist_id
								INNER JOIN museum m ON m.museum_id = w.museum_id
)
SELECT name, COUNT(name) AS paintings FROM artist_painting_country
GROUP BY name
HAVING COUNT(name) > 1
ORDER BY paintings DESC;



18) Display the country and the city with most no of museums. Output 2 seperate columns to mention the city and country. If there are multiple value, seperate them with comma.

WITH max_museums_country AS (SELECT country, COUNT(museum_id) AS museums,
							 RANK() OVER(ORDER BY COUNT(country) DESC) AS rank
							 FROM museum
							 GROUP BY country
),
max_museums_cities AS (SELECT city, COUNT(museum_id) AS museums,
					   RANK() OVER(ORDER BY COUNT(city) DESC) AS rank
					   FROM museum
					   GROUP BY city
)
SELECT string_agg(DISTINCT co.country, ', '), string_agg(DISTINCT ci.city, ', ')
FROM max_museums_country co
CROSS JOIN max_museums_cities ci
WHERE co.rank = 1 AND ci.rank = 1;



19) Identify the artist and the museum where the most expensive and least expensive painting is placed. Display the artist name, sale_price, painting name, museum name, museum city and canvas label

WITH sale_rank AS (SELECT *, RANK() OVER(ORDER BY sale_price DESC) AS rank_desc,
			 RANK() OVER(ORDER BY sale_price) AS rank_asc
			 FROM product_size
)
SELECT w.name, sr.sale_price, a.full_name, m.name, m.city, cs.label
FROM sale_rank sr
INNER JOIN work w on w.work_id = sr.work_id
INNER JOIN museum m on m.museum_id = w.museum_id
INNER JOIN artist a on a.artist_id = w.artist_id
INNER JOIN canvas_size cs on cs.size_id = sr.size_id::NUMERIC
WHERE rank_desc=1 OR rank_asc=1;



20) Which country has the 5th highest no of paintings?

WITH country_paintings AS (SELECT m.country, COUNT(w.name) AS paintings,
						   RANK() OVER(ORDER BY COUNT(w.name) DESC) AS rank
						   FROM work w
						   INNER JOIN museum m ON m.museum_id=w.museum_id
						   GROUP BY m.country
)
SELECT country, paintings FROM country_paintings
WHERE rank = 5;



21) Which are the 3 most popular and 3 least popular painting styles?

WITH most_paintings_style AS (SELECT style, COUNT(work_id),
							RANK() OVER(ORDER BY COUNT(work_id) DESC) AS rank_desc
							FROM work
							WHERE style IS NOT NULL
							GROUP BY style
),
least_paintings_style AS (SELECT style, COUNT(work_id),
						RANK() OVER(ORDER BY COUNT(work_id)) AS rank_asc
						FROM work
						WHERE style IS NOT NULL
						GROUP BY style
)
SELECT m.style AS most_popular_style, l.style AS least_popular_style
FROM most_paintings_style m
INNER JOIN least_paintings_style l ON m.rank_desc = l.rank_asc
WHERE m.rank_desc <= 3 OR l.rank_asc <= 3;



22) Which artist has the most no of Portraits paintings outside USA?. Display artist name, no of paintings and the artist nationality.

SELECT full_name, nationality, no_of_paintings FROM (SELECT a.full_name, a.nationality,
													 COUNT(w.work_id) AS no_of_paintings,
													 RANK() OVER(ORDER BY COUNT(w.work_id) DESC) AS rank
													 FROM artist a
													 INNER JOIN work w ON w.artist_id = a.artist_id
													 INNER JOIN museum m ON m.museum_id = w.museum_id
													 INNER JOIN subject s ON s.work_id = w.work_id
													 WHERE s.subject = 'Portraits' AND m.country != 'USA'
													 GROUP BY a.full_name, a.nationality
) WHERE rank = 1;